// Stop the world

// it satisfies basic slave functions

//get 8 bit color and send hits


#include <Wire.h>

#define DEVICE_ADD 11
#define STEADY_STATE 300
#define HIT_PIN     A0

int hit= 0;
int loopDelay = 10;

byte RGBcolorSpace = 0;// first 3 bits red 3 bits green 2 bits blue
const int RGBcolorPins[3] = { 9,10,11 };
int RGBcolorValues[3] = { 0,0,0 };

byte MODE = STEADY_STATE;// 

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Wire.begin(DEVICE_ADD);
  //I2S Functions
  Wire.onRequest(requestEvent);
  Wire.onReceive(receiveEvent);
  //define led pins
  pinMode(RGBcolorPins[0], OUTPUT);
  pinMode(RGBcolorPins[1], OUTPUT);
  pinMode(RGBcolorPins[2], OUTPUT);
 // pinMode(HIT_PIN, INPUT);
}

void loop() {

 getHit();

  if (MODE != STEADY_STATE) {
    updateMODE();
  }

  delay(loopDelay);

}

void requestEvent() {
  Serial.println("HIT");
  //Send hit data on request
  Wire.write(hit);
  Serial.println(hit);
  hit = 0;
}

void receiveEvent(int howMany) {
  // reads the lights mode 
  MODE = Wire.read();
  Serial.println(MODE);
}

void updateMODE() {
  Serial.println(MODE);
  // decode recieved message
  RGBcolorSpace = MODE;
  
  // calculate values
  RGBcolorValues[2] = (MODE % 4) * 85;//blue
  RGBcolorValues[1] = ((MODE / 4) % 8) * 36;//green
  RGBcolorValues[0] = ((MODE / 32) % 8) * 36;//red

  // apply changes

  for (int i = 0; i < 3; i++) {
    analogWrite(RGBcolorPins[i],RGBcolorValues[i]);
  }

  MODE = STEADY_STATE;// the recieved mode applied there is no mode to apply
  
}

void getHit(){
    int newHit = analogRead(HIT_PIN);
    if(newHit>hit)
    hit =newHit;
}



// I wanna get off
