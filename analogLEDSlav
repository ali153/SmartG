
//       ____
//      /    \    
//     /  /\  \    Ali KESGÄ°N
//    /  /  \  \	Robota
//   /  /    \  \________
//  /  /      \___________

#include<Wire.h>

#define DEVICE_ADD 11
#define STEADY_STATE 300
#define HIT_PIN     5

int hit= 0;
int loopDelay = 10;
int blinkDelay = 1000;
int blinkRate;

byte RGBcolorSpace = 0;// first 3 bits red 3 bits green 2 bits blue
const int RGBcolorPins[3] = { 9,10,11 };// 3,5,6 can be used also
int RGBcolorValues[3] = { 0,0,0 };
bool bli = 0;//blink yok
bool blinkState = 0;//blink state
int blinkCounter = 0;

byte MODE = STEADY_STATE;// 

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Wire.begin(DEVICE_ADD);
  //I2S Functions
  Wire.onRequest(requestEvent);
  Wire.onReceive(receiveEvent);
  //define led pins
  pinMode(RGBcolorPins[0], OUTPUT);
  pinMode(RGBcolorPins[1], OUTPUT);
  pinMode(RGBcolorPins[2], OUTPUT);
  pinMode(HIT_PIN, INPUT);

  blinkRate = blinkDelay / loopDelay;

}

void loop() {

 getHit();

  if (MODE != STEADY_STATE) {
    updateMODE();
  }

 // blink
 // dontBlink(); //where it bilinks

  delay(loopDelay);

}

void requestEvent() {
  Serial.println("HIT");
  //Send hit data on request
  Wire.write(hit);
  Serial.println(hit);
  hit = 0;
}

void receiveEvent(int howMany) {
  // reads the lights mode 
  MODE = Wire.read();
  Serial.println(MODE);
}

void updateMODE() {
  Serial.println(MODE);
  // decode recieved message
  RGBcolorSpace = MODE;
  if (MODE > 200) {
	  bli = 1;
  }
  else {
	  bli = 0;
  }
  // calculate values
  RGBcolorValues[2] = (MODE % 4) * 85;//blue
  RGBcolorValues[1] = ((MODE / 4) % 8) * 36;//green
  RGBcolorValues[0] = ((MODE / 32) % 8) * 36;//red

  // apply changes

  for (int i = 0; i < 3; i++) {
	  analogWrite(RGBcolorPins[i],RGBcolorValues[i]);
  }

  MODE = STEADY_STATE;// the recieved mode applied there is no mode to apply
}

void dontBlink() {
  blinkCounter++;
  if (bli == 1 && blinkCounter > blinkRate) {
    // blink code runs here
    if (blinkState == 0) {
      // set them all to 0
      for (int i = 0; i < 3; i++) {
        analogWrite(RGBcolorPins[i], 0);
      }
    }
    else {
      // set them to their original state
      for (int i = 0; i < 3; i++) {
		  analogWrite(RGBcolorPins[i], RGBcolorValues[i]);
      }
    }
    blinkState = !blinkState;
    blinkCounter = 0;
  }
}
void getHit(){
    hit = digitalRead(HIT_PIN);
}

